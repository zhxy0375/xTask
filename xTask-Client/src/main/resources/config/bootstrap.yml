#spring:
#  cloud:
#    config:
#      uri: http://config.se.dooioo.net

env: ${spring.profiles.active}
#spring.application.name = @pom.artifactId@
spring:
  application:
    name: xtask-client

# 上面这些属性必须配置在bootstrap.properties中，config部分内容才能被正确加载。因为config的相关配置会先于application.properties，而bootstrap.properties的加载也是先于application.properties



#spring:
#  cloud:
#    zookeeper:
#      enabled: true  # true:开启zookeeper外部化配置, false:读取本地配置; 需要将config.enabled,config.watcher.enabled同时设置
#      connect-string: 10.8.203.181:2181,10.8.203.181:2182,10.8.203.181:2183
#      config:
#        enabled: true
#        watcher:
#          enabled: true

# http://10.22.16.30 转发为 ttp://10.22.16.30:8888 ttp://10.22.16.30:9999


management:
  context-path: /admin
  port: ${server.port}

##服务发现配置
eureka:
  instance:
    preferIpAddress: true
    statusPageUrlPath: ${management.context-path}/info
    healthCheckUrlPath: ${management.context-path}/health
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  client:
      serviceUrl:
        defaultZone: http://10.8.203.181:1111/eureka/
#        defaultZone: http://discovery.xxx.net/eureka/

#ribbon:
#  eureka:
#    enabled: true
#
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 160000
#### 禁用断路器
#feign:
#  hystrix:
#    enabled: false

---
spring:
  profiles: test
  cloud:
    config:
      profile: ${spring.profiles.active}
      label: master
      uri: http://localhost:7001/
#      uri: http://config.xxx.net
eureka:
  client:
    serviceUrl:
      defaultZone: http://10.8.203.181:1111/eureka/
    #registerWithEureka: false  #表示是否注册自身到eureka服务器

---
spring:
  profiles: production
  cloud:
    config:
      uri:http://localhost:7001/
#      uri: http://config.xxx.com
eureka:
  client:
    serviceUrl:
#      defaultZone: http://discovery1.xxx.com/eureka/,http://discovery2.xxx.com/eureka/
      defaultZone: http://10.8.203.181:1111/eureka/